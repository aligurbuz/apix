#!/usr/bin/env php
<?php

/**
 * Root main path.
 * dirname â€” Returns a parent directory's path
 * Given a string containing the path of a file or directory,
 * this function will return the parent directory's path that is levels up from the current directory.
 * return type string
 */
$root=dirname(__FILE__);
define('root',$root);
define('src','src/app');

/**
 * Cli composer vendor autoload.
 * For libraries that specify autoload information, Composer generates a vendor/autoload.php file.
 * You can simply include this file and start using the classes that those libraries provide without any extra work
 * system main skeleton
 * return autoload file
 */
require_once './lib/bootstrap.php';
use Apix\StaticPathModel as staticPath;
use Apix\Utils;


/**
 * System cli command main file
 * this snippet calls really command file for system
 * return class method
 */

if(file_exists(staticPath::$binCommandsPath.''.$argv[1].'.php')){

    //get command file
    $commandNamespaceSpl=staticPath::$binCommandsNameSpace.''.$argv[1];
    $commandFile=new $commandNamespaceSpl();

    $method=$argv[2];
    echo $commandFile->$method(utils::getArgForConsoleParameters($argv)).''.PHP_EOL;
}
else{

    /**
     * System cli custom command main file
     * return class method
     */
    if(environment()=="local"){
        //get base properties
        echo utils::getBaseConsoleStaticProperties($argv);

    }
    else {
        echo 'Console command except local would not work';
        echo '
        ================================';
    }


}


